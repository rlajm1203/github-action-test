name: 조건부 배포

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: GitHub 에서 레포 받아오기
              uses: actions/checkout@v3

            - name: a 폴더가 변경될 때
#              if: contains(github.event.head_commit.modified, 'a/') || contains(github.event.head_commit.added, 'a/') ||
#                  contains(github.event.head_commit.removed, 'a/')
              run: |
                echo "a 폴더가 변경 됨"
                echo ${{ github.event.head_commit.modified }}
                echo CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
                echo "Changed files: $CHANGED_FILES"

            - name: b 폴더가 변경될 때
              if: contains(github.event.head_commit.modified, 'b/') || contains(github.event.head_commit.added, 'b/') ||
                  contains(github.event.head_commit.removed, 'b/')
              run: |
                echo "b 폴더가 변경될 됨"

            - name: 헤드 커밋 출력
              run: |
                echo '${{ toJson(github.event.head_commit) }}'
              

            - name: git diff
              run: |
                CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
                echo "Changed files: $CHANGED_FILES"
                echo "files=$CHANGED_FILES" >> $GITHUB_ENV


jobs:
  check-pr-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR changed files
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          if [ -z "$PR_NUMBER" ]; then
            echo "Pull Request number is missing!"
            exit 1
          fi

          API_URL="https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/files"
          
          echo "Fetching changed files from: $API_URL"
          CHANGED_FILES=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "$API_URL")

          echo "GitHub API Response: $CHANGED_FILES"
          
          FILE_LIST=$(echo "$CHANGED_FILES" | jq -r '.[].filename')

          if [ -z "$FILE_LIST" ]; then
            echo "No changed files found."
            exit 0
          fi

          echo "Changed files: $FILE_LIST"
          echo "files=$FILE_LIST" >> $GITHUB_ENV
